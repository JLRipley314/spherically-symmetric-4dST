import sys, time
from sim_class import Sim
#############################################################################
args= sys.argv
##############################################################################
### input paramters: set these by hand 
##############################################################################
sim= Sim(args)
#-----------------------------------------------------------------------------
sim.compactification_length= float(100) 
#-----------------------------------------------------------------------------
sim.evolve_time=   float(200) ### in units of initial black hole mass for ze field 
sim.num_saved_times= int(500)
sim.cfl= 0.25
#-----------------------------------------------------------------------------
### scalar field potentials
#-----------------------------------------------------------------------------
sim.mu= 0.0
sim.la= 0.0016875

sim.gbc1= 0.0
sim.gbc2= 177.777
#-----------------------------------------------------------------------------
sim.phi_r= 20  ### where measuring phi
#-----------------------------------------------------------------------------
### initial data
#-----------------------------------------------------------------------------
#sim.initial_data_type= str("scalarized_bh")
sim.initial_data_type= str("bump_with_bh")
#sim.initial_data_type= str("bump")
#-----------------------------------------------------------------------------
sim.bh_mass= float(10.0)
#-----------------------------------------------------------------------------
### for the noncompact scalar profile
sim.charge= float(0.004)
#-----------------------------------------------------------------------------
### for the Gaussian-like pulse
sim.amp= float(1e-9)
sim.r_l= float(25.0)
sim.r_u= float(55.0)
sim.r_c= float(35.0)
sim.r_w= float(2.0)
#-----------------------------------------------------------------------------
sim.nx= pow(2,10)+1 
#-----------------------------------------------------------------------------
sim.set_derived_params()
##############################################################################
if (sim.run_type == "basic_run"):
	sim.make_output_dir()
	sim.write_sim_params()
	sim.launch_run()
##############################################################################
else:
	raise ValueError("run_type = "+str(sim.run_type)) 
